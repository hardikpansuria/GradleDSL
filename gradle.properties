## Project-wide Gradle settings.
#
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
#
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx1024m -XX:MaxPermSize=256m
# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
#
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true
#Fri Dec 01 15:45:58 CST 2017
systemProp.https.proxyPort=1080
systemProp.http.proxyHost=127.0.0.1
systemProp.https.proxyHost=127.0.0.1
systemProp.http.proxyPort=1080

#The -Xmx flag specifies the maximum amount of memory to use in the Java process.
#An -Xms flag specifies the initial amount of memory to allocate to the process. The
#example also changes the size of the ¡°permanent generation¡± space, and dumps the
#heap to a file when a java.lang.OutOfMemoryError is thrown.
org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
user='user'
pass='passowrd'
#signingconfigs release
keyAlias=gradle
keyPassword=gradle
storeFile=keystore/app.jks
storePassword=gradle


#This recipe discusses settings that can be added to the gradle.properties file in the root
#of the Android application. If you prefer to use global settings, add a file called
#gradle.properties to the .gradle subfolder in your home directory.
#The Gradle daemon
#The Gradle daemon is a background process that stays alive between builds, caching
#both data and code. Most recent versions of Gradle automatically start a Gradle daemon
#whenever you run from the command prompt.


#By default, Android Studio starts a Gradle daemon in your project, with a timeout
#period of three hours, which is long enough for most development tasks. If you run
#Gradle from the command line, however, you may not automatically start the daemon.

#To make sure the daemon starts, add the setting
org.gradle.damon=true
#--daemon and --no-daemon to enable or disable the daemon on individual build invocations.
#Stopping it is sometimes useful if you¡¯re worried that the internal cache is out
#of date or if you¡¯re doing debugging. If you wish to stop a running daemon process,
#use the --stop argument to gradle.

#Parallel compilation
#Gradle has an ¡°incubating¡± option to compile independent projects in parallel. To use
#it, add a line to gradle.properties
org.gradle.parallel=true

#Normally Gradle configures all tasks in all projects involved in a build before executing
#any of them. For projects with a large number of subprojects and many tasks, this
#can be inefficient. It is therefore possible to try to configure only the projects that are
#relevant for the requested tasks.
#Most Android applications have only a small number of subprojects, so this feature
#may not be all that helpful.
#this is an incubating(ÅàÑø·õ»¯) feature, so the specific details may change with new versions
#of Gradle.
#To do this, use the ¡°configure on demand¡± setting in gradle.properties
org.gradle.configureondemand=true